#!/bin/bash

# make clean
# make all
# make install

# Path to linuxcnc dir.
LINUXCNC_DIR="/opt/linuxcnc"

# Path to linuxcnc's rtlib. 
LINUXCNC_RT_DIR="/opt/linuxcnc/rtlib"

# Path to c project dir.
C_PROJECT_DIR="/home/user/Desktop/Linux-Embedded/linux-hal/halcompile-trajectory-ruckig/hal"
rm -rf $LINUXCNC_RT_DIR/trajectory.so 					# Remove old files
cp -rf $C_PROJECT_DIR/trajectory.so $LINUXCNC_RT_DIR	# Copy new component .so file to rtlib


# Let linux know where to search for extra shared library's.
sudo ldconfig \
/home/user/Desktop/Linux-Embedded/linux-hal/halcompile-trajectory-ruckig/build-cpp_interface-Desktop-Release \
/home/user/Desktop/Linux-Embedded/linux-hal/halcompile-trajectory-ruckig/cpp_interface/ruckig/build \
/opt/linuxcnc/rtlib \

cd $LINUXCNC_DIR/scripts && . ./rip-environment
	
	# stop hal.
        halcmd stop
	
	# Load rt component:
        halcmd loadrt threads name1=base-thread fp1=0 period1=25000 name2=servo-thread period2=1000000

        halcmd loadrt trajectory
        ########### Section opencascade + kinematics ############
        # Load the kuka model:
        #halcmd loadrt opencascade stepfilepath=/home/user/Desktop/Linux-Embedded/linux-hal/halcompile-opencascade/machines/kuka_kr_6_10_agilus display_hz=60
        # Load the mitsubishi model:
        halcmd loadrt opencascade stepfilepath=/home/user/Desktop/Linux-Embedded/linux-hal/halcompile-opencascade/machines/mitsubishi_rv_6sdl display_hz=60
        halcmd loadrt kinematic

        halcmd addf read servo-thread
        halcmd addf opencascade servo-thread
        halcmd addf kinematic servo-thread

        # Load the kuka params:
        #halcmd -f /home/user/Desktop/Linux-Embedded/linux-hal/halcompile-opencascade/machines/kuka_kr_6_10_agilus/kuka_kr_6_10_agilus.hal
        # Load the mitsubishi params:
        halcmd -f /home/user/Desktop/Linux-Embedded/linux-hal/halcompile-opencascade/machines/mitsubishi_rv_6sdl/mitsubishi_rv_6sdl.hal

        # Link (net) kinematic results to opencascade.
        halcmd -f /home/user/Desktop/Linux-Embedded/linux-hal/halcompile-opencascade/c-project/link.hal

        halcmd -f $C_PROJECT_DIR/trajectory.hal

        # start hal.
        halcmd start

 	# Start hal programs to debug:
        # halmeter
         halshow
        # halscope
	
	# Unload rt components and clean up hal:
	halrun -U



